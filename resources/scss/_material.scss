@use "sass:color";
@use "variables";
@use "include-media/dist/include-media";

md-icon svg {
    width: var(--_icon-size, var(--_size));
    height: var(--_icon-size, var(--_size));
    line-height: 0;
}

md-data-table md-icon[slot^="pagination"] {
    --_color: inherit;
}

label:has(> :is(md-checkbox, md-switch)) {
    display: flex;
    gap: 8px;
    align-items: center;
}

md-filled-text-field, md-outlined-text-field {
    text-align: initial;
}

md-filled-select::part(menu), md-outlined-select::part(menu) {
    max-height: 300px;
}

nav-drawer md-list.nav {
    --md-list-container-color: transparent;
    display: block;
    margin-inline: var(--nav-drawer-list-spacing, 12px);
    min-width: unset;

    md-list-item[href] {
        margin-block: var(--nav-drawer-list-spacing, 12px);
        display: block;
        --md-focus-ring-shape: var(--nav-drawer-items-border-radius, 28px);
        border-radius: var(--nav-drawer-items-border-radius, 28px);

        @media (forced-colors: active) {
            border-radius: var(--nav-drawer-items-border-radius, 28px);
            border: 1px solid CanvasText;
        }

        &[selected] {
            background-color: var(--md-sys-color-surface-container-highest);

            @media (forced-colors: active) {
                border: 4px double CanvasText;
            }
        }
    }

    md-list-item::part(focus-ring) {
        --md-focus-ring-shape: var(--nav-drawer-items-border-radius, 28px);
    }

    md-item {
        font-size: var(--nav-drawer-item-font-size, 24px);
        padding-block-end: 0;

        &[slot="headline"] {
            /* shadow root slot has overflow:hidden, it's cutting some text off */
            padding: block 2px;
        }

        &:first-of-type {
            padding-block: 0;
        }

        & + md-list-item[href] {
            margin-block-start: 0;
        }
    }
}

md-fab, md-branded-fab {
    &.sticky {
        position: fixed;
        right: 16px;
        bottom: 50px;
    }
}
